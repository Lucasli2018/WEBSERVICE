
package com.rl.trans;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "EnglishChineseSoap", targetNamespace = "http://WebXml.com.cn/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface EnglishChineseSoap {


    /**
     * <br /><h3>中英文双向翻译 DataSet</h3><p>输入参数：wordKey = 单词； 返回数据：DataSet。（包括全部数据三个DataTable）</p><br />
     * 
     * @param wordKey
     * @return
     *     returns com.rl.trans.TranslatorResponse.TranslatorResult
     */
    @WebMethod(operationName = "Translator", action = "http://WebXml.com.cn/Translator")
    @WebResult(name = "TranslatorResult", targetNamespace = "http://WebXml.com.cn/")
    @RequestWrapper(localName = "Translator", targetNamespace = "http://WebXml.com.cn/", className = "com.rl.trans.Translator")
    @ResponseWrapper(localName = "TranslatorResponse", targetNamespace = "http://WebXml.com.cn/", className = "com.rl.trans.TranslatorResponse")
    public com.rl.trans.TranslatorResponse.TranslatorResult translator(
        @WebParam(name = "wordKey", targetNamespace = "http://WebXml.com.cn/")
        String wordKey);

    /**
     * <br /><h3>中英文双向翻译（基本）String()</h3><p>输入参数：wordKey = 单词； 返回数据：一维字符串数组 String[]。</p><br />
     * 
     * @param wordKey
     * @return
     *     returns com.rl.trans.ArrayOfString
     */
    @WebMethod(operationName = "TranslatorString", action = "http://WebXml.com.cn/TranslatorString")
    @WebResult(name = "TranslatorStringResult", targetNamespace = "http://WebXml.com.cn/")
    @RequestWrapper(localName = "TranslatorString", targetNamespace = "http://WebXml.com.cn/", className = "com.rl.trans.TranslatorString")
    @ResponseWrapper(localName = "TranslatorStringResponse", targetNamespace = "http://WebXml.com.cn/", className = "com.rl.trans.TranslatorStringResponse")
    public ArrayOfString translatorString(
        @WebParam(name = "wordKey", targetNamespace = "http://WebXml.com.cn/")
        String wordKey);

    /**
     * <br /><h3>中英文双向翻译（相关词条）String()</h3><p>输入参数：wordKey = 单词； 返回数据：一维字符串数组 String[]。</p><br />
     * 
     * @param wordKey
     * @return
     *     returns com.rl.trans.ArrayOfString
     */
    @WebMethod(operationName = "TranslatorReferString", action = "http://WebXml.com.cn/TranslatorReferString")
    @WebResult(name = "TranslatorReferStringResult", targetNamespace = "http://WebXml.com.cn/")
    @RequestWrapper(localName = "TranslatorReferString", targetNamespace = "http://WebXml.com.cn/", className = "com.rl.trans.TranslatorReferString")
    @ResponseWrapper(localName = "TranslatorReferStringResponse", targetNamespace = "http://WebXml.com.cn/", className = "com.rl.trans.TranslatorReferStringResponse")
    public ArrayOfString translatorReferString(
        @WebParam(name = "wordKey", targetNamespace = "http://WebXml.com.cn/")
        String wordKey);

    /**
     * <br /><h3>中英文双向翻译（例句）String()</h3><p>输入参数：wordKey = 单词； 返回数据：一维字符串数组 String[]。</p><br />
     * 
     * @param wordKey
     * @return
     *     returns com.rl.trans.ArrayOfString
     */
    @WebMethod(operationName = "TranslatorSentenceString", action = "http://WebXml.com.cn/TranslatorSentenceString")
    @WebResult(name = "TranslatorSentenceStringResult", targetNamespace = "http://WebXml.com.cn/")
    @RequestWrapper(localName = "TranslatorSentenceString", targetNamespace = "http://WebXml.com.cn/", className = "com.rl.trans.TranslatorSentenceString")
    @ResponseWrapper(localName = "TranslatorSentenceStringResponse", targetNamespace = "http://WebXml.com.cn/", className = "com.rl.trans.TranslatorSentenceStringResponse")
    public ArrayOfString translatorSentenceString(
        @WebParam(name = "wordKey", targetNamespace = "http://WebXml.com.cn/")
        String wordKey);

    /**
     * <br /><h3>获得候选词</h3><p>输入参数：wordKey = 单词； 返回数据：一维字符串数组 String[]。</p><br />
     * 
     * @param wordKey
     * @return
     *     returns com.rl.trans.ArrayOfString
     */
    @WebMethod(operationName = "SuggestWord", action = "http://WebXml.com.cn/SuggestWord")
    @WebResult(name = "SuggestWordResult", targetNamespace = "http://WebXml.com.cn/")
    @RequestWrapper(localName = "SuggestWord", targetNamespace = "http://WebXml.com.cn/", className = "com.rl.trans.SuggestWord")
    @ResponseWrapper(localName = "SuggestWordResponse", targetNamespace = "http://WebXml.com.cn/", className = "com.rl.trans.SuggestWordResponse")
    public ArrayOfString suggestWord(
        @WebParam(name = "wordKey", targetNamespace = "http://WebXml.com.cn/")
        String wordKey);

    /**
     * <br /><h3>获得朗读MP3字节流</h3><p>输入参数：Mp3 = Mp3名称； 返回数据：字节数组 Byte[]。</p><br />
     * 
     * @param mp3
     * @return
     *     returns byte[]
     */
    @WebMethod(operationName = "GetMp3", action = "http://WebXml.com.cn/GetMp3")
    @WebResult(name = "GetMp3Result", targetNamespace = "http://WebXml.com.cn/")
    @RequestWrapper(localName = "GetMp3", targetNamespace = "http://WebXml.com.cn/", className = "com.rl.trans.GetMp3")
    @ResponseWrapper(localName = "GetMp3Response", targetNamespace = "http://WebXml.com.cn/", className = "com.rl.trans.GetMp3Response")
    public byte[] getMp3(
        @WebParam(name = "Mp3", targetNamespace = "http://WebXml.com.cn/")
        String mp3);

}
